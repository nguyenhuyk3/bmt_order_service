// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: order.get.sql

package sqlc

import (
	"context"
)

const getOrderByTicketBooker = `-- name: GetOrderByTicketBooker :many
SELECT id, ordered_by, showtime_id, show_date, status, note, created_at, updated_at 
FROM orders
WHERE ordered_by = $1
`

func (q *Queries) GetOrderByTicketBooker(ctx context.Context, orderedBy string) ([]Orders, error) {
	rows, err := q.db.Query(ctx, getOrderByTicketBooker, orderedBy)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []Orders{}
	for rows.Next() {
		var i Orders
		if err := rows.Scan(
			&i.ID,
			&i.OrderedBy,
			&i.ShowtimeID,
			&i.ShowDate,
			&i.Status,
			&i.Note,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
